def parse_pdb(pdb_filename):
    atoms = []
    with open(pdb_filename) as f:
        for line in f:
            if line.startswith("ATOM") or line.startswith("HETATM"):
                atom = {
                    "atom_name": line[12:16].strip(),
                    "residue_name": line[17:20].strip(),
                    "residue_number": int(line[22:26]),
                    "x": float(line[30:38]),
                    "y": float(line[38:46]),
                    "z": float(line[46:54]),
                }
                atoms.append(atom)
    return atoms


def write_to_gro(atoms, gro_filename):
    with open(gro_filename, "w") as f:
        f.write("Generated by script\n")
        f.write(f"{len(atoms)}\n")
        for atom in atoms:
            f.write(
                "{:5d}{:<5s}{:<5s}{:5d}{:8.3f}{:8.3f}{:8.3f}\n".format(
                    atom["residue_number"],
                    atom["residue_name"],
                    atom["atom_name"],
                    atoms.index(atom) + 1,
                    atom["x"] / 10,
                    atom["y"] / 10,
                    atom["z"] / 10,  # Convert from Angstroms to nm
                )
            )
        f.write("   15.000   15.000   15.000\n")  # Box dimensions, adjust as needed


# Parse the PDB file
atoms = parse_pdb("./antibody-CG.pdb")

# Write the data to a GRO file
write_to_gro(atoms, "./system.gro")
